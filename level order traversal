#include<iostream>
#include<queue>
using namespace std;

class Node{
    public:
    int data;
    Node* left;
    Node* right;
    Node(int  data ){
        this -> data = data;
        this -> left = NULL;
        this -> right = NULL;
    }
};

inline Node* buildRoot(Node* root){
    cout<<"Enter data : ";
    int data;
    cin>>data;
    if(data == -1){
        return NULL;
    }
    root = new Node(data);
    cout<<"For left";
    root -> left = buildRoot(root -> left);
    cout<<"For right";
    root -> right = buildRoot(root -> right);
    return root;
    
}

inline void levelOrderTraversal(Node* root){
    queue<Node*> q;
    q.push(root);
    q.push(NULL);
    while(!q.empty()){
        Node* temp = q.front();
      
        q.pop();
        if(temp == NULL){
            cout<<endl;
            if(!q.empty()){
                q.push(NULL);
            }
        }
        else{
            cout<<temp -> data <<"   ";
        if(temp -> left){
            q.push(temp ->left);
        }
        if(temp -> right){
            q.push(temp -> right);
        }
            
        }
    }
}

int main(){
  
  Node* root = NULL;
  
  root = buildRoot(root);
  levelOrderTraversal(root);
    
    
    
    
    return 0;
}
