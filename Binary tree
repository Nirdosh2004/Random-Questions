#include<iostream>
#include<queue>
using namespace std;

class node{
    public:
    int data;
    node* left;
    node* right;
    node(int d){
        this -> data = d;
        this -> left = NULL;
        this -> right = NULL;
    }
};

inline node* buildRoot(node* root){
    cout<<"Enter data : ";
    int data;
    cin>>data;
    root = new node(data);
    if(data == -1){
        return NULL;
    }
    cout<<"For Left ";
    root -> left = buildRoot(root -> left);
    cout<<"For Right ";
    root -> right = buildRoot(root -> right);
    return root;
    
}

inline void levelOrderTraversal(node* root){
    queue<node*> q;
    q.push(root);
    q.push(NULL);
    while(!q.empty()){
        node* temp = q.front();
        q.pop();
        if(temp == NULL){
            cout<<endl;
            if(!q.empty()){
                q.push(NULL);
            }
        }
        else{
            cout<<"| "<<temp -> data<<" |" << "     ";
            if(temp -> left){
                q.push(temp-> left);
            }
            if(temp -> right ){
                q.push(temp -> right );
            }
        }
    }
}

int main(){
  
  node* root = NULL;
  
  root = buildRoot(root);
 levelOrderTraversal(root);
    
    
    
    return 0;
}
